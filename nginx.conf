# Запуск рабочих процессов от имени пользователя nginx
user nginx;
# Автоматическое определение количества рабочих процессов
worker_processes auto;

# Путь к файлу с логами ошибок
error_log /var/log/nginx/error.log warn;
# Файл для хранения PID главного процесса
pid /var/run/nginx.pid;

events {
    # Максимальное количество соединений на один рабочий процесс
    worker_connections 1024;
    # Использовать epoll для высокой производительности в Linux
    use epoll;
    # Разрешить принимать все новые соединения сразу
    multi_accept on;
}

http {
    # Подключение файла с MIME-типами
    include /etc/nginx/mime.types;
    # Тип по умолчанию
    default_type application/octet-stream;
    
    # --- Оптимизация производительности ---
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65s;
    keepalive_requests 1000;
    
    # --- Настройки буферов ---
    client_body_buffer_size 128k;
    client_max_body_size 16m;
    
    # --- Компрессия ---
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
    
    # --- Карта для обновления соединения до WebSocket ---
    # Это критически важно для Blazor Server / Interactive режимов
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # --- Определение вышестоящих серверов (upstreams) ---
    upstream admin_panel {
        # Адрес вашего Blazor приложения в Docker сети
        server admin-panel:5566;
        keepalive 32;
    }
    
    upstream auth_api {
        server auth.api:5544;
        keepalive 16;
    }
    
    upstream seq_service {
        server seq:80; # Обычно Seq слушает 80 порт внутри контейнера
        keepalive 8;
    }

    # --- Формат логов для удобного анализа ---
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    server {
        listen 80;
        server_name localhost;
        
        # --- Базовые заголовки безопасности ---
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # --- Проксирование API аутентификации ---
        # Этот блок должен идти перед основным location /, чтобы перехватывать свой путь
        location /auth/ {
            proxy_pass http://auth_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # --- Проксирование Seq ---
        location /seq/ {
            proxy_pass http://seq_service/;
            proxy_set_header Host $host;
            # Для веб-интерфейса Seq также может понадобиться WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # --- ОСНОВНОЙ БЛОК ДЛЯ BLazor ПРИЛОЖЕНИЯ ---
        # Этот блок будет обрабатывать все остальные запросы:
        # - Загрузку главной страницы (/)
        # - Статические файлы (_framework/*, _content/*, css/* и т.д.)
        # - WebSocket соединение (_blazor)
        location / {
            proxy_pass http://admin_panel;
            
            # Настройки, необходимые для проксирования WebSocket (SignalR)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_cache_bypass $http_upgrade; # Не кэшировать запросы на обновление протокола
            
            # Стандартные заголовки для передачи информации о клиенте
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Увеличенные таймауты для долгоживущих соединений
            proxy_connect_timeout 60s;
            proxy_send_timeout 3600s;
            proxy_read_timeout 3600s;
        }
        
        # --- Обработка ошибок ---
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}